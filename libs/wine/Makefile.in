EXTRALIBS = $(DL_LIBS) $(COREFOUNDATION_LIBS) $(CORESERVICES_LIBS)
EXTRADEFS = -DWINE_UNICODE_API=""

C_SRCS = \
	casemap.c \
	collation.c \
	config.c \
	debug.c \
	ldt.c \
	loader.c \
	mmap.c \
	port.c \
	sortkey.c \
	string.c \
	wctype.c

EXTRA_OBJS = version.o

config_EXTRADEFS = \
	-DBINDIR='"${bindir}"' \
	-DDLLDIR='"${dlldir}"' \
	-DLIB_TO_BINDIR=\"`$(MAKEDEP) -R ${libdir} ${bindir}`\" \
	-DLIB_TO_DLLDIR=\"`$(MAKEDEP) -R ${libdir} ${dlldir}`\" \
	-DBIN_TO_DLLDIR=\"`$(MAKEDEP) -R ${bindir} ${dlldir}`\" \
	-DBIN_TO_DATADIR=\"`$(MAKEDEP) -R ${bindir} ${datadir}/wine`\"

SHAREDLIB = $(LIBWINE_SHAREDLIB)
IMPORTLIB = $(LIBWINE_IMPORTLIB)
INSTALL_LIB = $(LIBWINE_INSTALL_LIB)
INSTALL_DEV = $(LIBWINE_INSTALL_DEV)

libwine_LDFLAGS = $(LIBWINE_LDFLAGS)
libwine_DEPS = $(LIBWINE_DEPENDS)

version.c: dummy
	version=`(GIT_DIR=$(top_srcdir)/.git git describe HEAD 2>/dev/null || echo "wine-$(PACKAGE_VERSION)") | sed -n -e '$$s/\(.*\)/const char wine_build[] = "\1  (Staging)";/p'` && (echo $$version | cmp -s - $@) || echo $$version >$@ || ($(RM) $@ && exit 1)

dummy:
.PHONY: dummy
